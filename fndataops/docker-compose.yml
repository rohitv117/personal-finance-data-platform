version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: finops
      POSTGRES_USER: finops_user
      POSTGRES_PASSWORD: finops_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U finops_user -d finops"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-webserver:
    image: apache/airflow:2.7.1
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://finops_user:finops_password@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./warehouse:/opt/airflow/warehouse
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    image: apache/airflow:2.7.1
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://finops_user:finops_password@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./warehouse:/opt/airflow/warehouse
    command: scheduler

  fastapi:
    build: ./api
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://finops_user:finops_password@postgres:5432/finops
      DUCKDB_PATH: /app/warehouse/duckdb/finops.duckdb
    volumes:
      - ./warehouse:/app/warehouse
    depends_on:
      postgres:
        condition: service_healthy

  duckdb:
    image: duckdb/duckdb:latest
    volumes:
      - ./warehouse:/workspace
    working_dir: /workspace
    command: tail -f /dev/null

volumes:
  postgres_data: 